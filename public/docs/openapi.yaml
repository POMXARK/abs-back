openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://127.0.0.1:80'
paths:
  /api/user:
    get:
      summary: ''
      operationId: getApiUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
  /api/v1/register:
    post:
      summary: 'Регистрация пользователя.'
      operationId: ''
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: cumque
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: okeefe.darrell@example.com
                password:
                  type: string
                  description: ''
                  example: g=W4VMQmzq
                password_confirmation:
                  type: string
                  description: ''
                  example: null
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/v1/login:
    post:
      summary: 'Авторизация пользователя.'
      operationId: ''
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: noble.hayes@example.net
                password:
                  type: string
                  description: ''
                  example: "`ShmmJ8x4M('>W="
              required:
                - email
                - password
      security: []
  /api/v1/abs:
    get:
      summary: 'Получить все объявления постранично.'
      operationId: ''
      description: ''
      parameters:
        -
          in: query
          name: page
          description: ''
          example: 1
          required: false
          schema:
            type: integer
            description: ''
            example: 1
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Создать объявление.'
      operationId: ''
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 200 characters.'
                  example: naeejhuogumhosyalvr
                description:
                  type: string
                  description: 'Must not be greater than 1000 characters.'
                  example: 'A perspiciatis numquam saepe.'
                photos:
                  type: array
                  description: ''
                  example:
                    - nam
                  items:
                    type: string
              required:
                - name
                - description
                - photos
  '/api/v1/abs/{id}':
    get:
      summary: 'Получить объявление.'
      operationId: ''
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the ab.'
        example: 2
        required: true
        schema:
          type: integer
tags:
  -
    name: Endpoints
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your dashboard and clicking <b>Generate API token</b>.'
security:
  -
    default: []
